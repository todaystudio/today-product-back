import { Context, Markup } from 'telegraf'

export const urlButton = (
	url: string,
	text: string = 'üîç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–∞–π—Ç–µ'
) => {
	return Markup.inlineKeyboard([Markup.button.url(text, url)])
}

export const connectButtonMarkup = async (ctx: Context, res: boolean) => {
	if (res) {
		await ctx.reply(
			'–û—Ç–ª–∏—á–Ω–æ!\n\n–ú—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏ —Ç–≤–æ–π –¢–µ–ª–µ–≥—Ä–∞–º –∫ –∞–∫–∫–∞—É–Ω—Ç—É –Ω–∞ —Å–∞–π—Ç–µ. –ù–∏–∂–µ —Å—Å—ã–ª–∫–∞, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç.',
			{
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',
								url: 'https://google.com/',
							},
						],
					],
				},
			}
		)
	} else {
		await ctx.reply(
			`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞ ü§∑üèª‚Äç‚ôÇÔ∏è.\n\n–í–µ—Ä–æ—è—Ç–Ω–æ, —Ç–≤–æ–π –¢–µ–ª–µ–≥—Ä–∞–º —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É –Ω–∞ —Å–∞–π—Ç–µ.`,
			{
				reply_markup: {
					inline_keyboard: [
						[
							{
								text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',
								url: 'https://google.com/',
							},
						],
					],
				},
			}
		)
	}
}
